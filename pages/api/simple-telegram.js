// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
export default async function handler(req, res) {
  // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, GET, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method === 'GET') {
    return res.status(200).json({ 
      status: 'API —Ä–∞–±–æ—Ç–∞–µ—Ç',
      timestamp: new Date().toISOString()
    });
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: '–¢–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã' });
  }

  try {
    const { name, phone, comment } = req.body;

    if (!name || !phone) {
      return res.status(400).json({ error: '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∏–º–µ–Ω–∏ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞' });
    }

    // –ü—Ä—è–º—ã–µ –∫–ª—é—á–∏ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
    const BOT_TOKEN = '8430823667:AAEhuKe7X8vgs3SsB44dmtYjqjz7rlWMyoE';
    const CHAT_ID = '546005770';

    const message = `üè† –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê

üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'}

üìÖ ${new Date().toLocaleString('ru-RU')}`;

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP –∑–∞–ø—Ä–æ—Å
    const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
    const payload = {
      chat_id: CHAT_ID,
      text: message
    };

    const response = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    });

    const result = await response.json();

    if (response.ok) {
      return res.status(200).json({ 
        success: true, 
        message: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram',
        telegramResult: result
      });
    } else {
      return res.status(500).json({ 
        error: '–û—à–∏–±–∫–∞ Telegram API', 
        details: result 
      });
    }

  } catch (error) {
    return res.status(500).json({ 
      error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', 
      message: error.message 
    });
  }
}
